{% extends "layouts.master" %}

{% block title %}{{ file.project.name }} - {{ file.name }} - Edit{% endblock %}

{% block content %}
<ol class="breadcrumb">
    <li>{{ link_to_route('projects.index', 'Home') }}</li>
    <li>{{ html_image(file.project.icon, null, {class: 'breadcrumb-icon'}) }} {{ link_to_route('projects.show', file.project.name, {project: file.project}) }}</li>
    <li>{{ link_to_route('projects.show', file.name, {project: file.project}) }}</li>
    <li class="active">Edit</li>
</ol>

<div class="container-fluid">
    {% if session('error') %}
        <div class="alert alert-danger" role="alert">{{ session('error') }}</div>
    {% endif %}
    {% if session('success') %}
        <div class="alert alert-success" role="alert">{{ session('success') }}</div>
    {% endif %}
    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">Upload en.catkeys</div>
                <div class="panel-body">
                    <p class="message bg-info text-info">
                        When an updated en.catkeys file is uploaded, the unchanged strings are kept in the database (along with their translations) and all new strings are added (with no translations yet, of course). Strings that aren't in the new en.catkeys anymore get removed (together with all their attached translations: just fixing a typo is then very costly, because the whole string has to be re-translated!).
                    </p>
                    {{ form_open({url: route('files.upload', {file: file.id}), method: POST, files: true}) }}
                    <div class="form-group {{ errors.has('catkeys') ? ' has-error' }}">
                        <div class="input-group">
                            {{ form_file('catkeys', {class: 'form-control'}) }}
                            <span class="input-group-btn">
                                {{ form_submit('Upload', {class: 'btn btn-primary'}) }}
                            </span>
                        </div>
                        {% for error in errors.get('catkeys') %}
                            <span class="help-block">{{ error }}</span>
                        {% endfor %}
                    </div>
                    {{ form_close() }}
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">Properties</div>
                <div class="panel-body">
                    {{ form_open({url: route('files.update', file.id), method: 'PUT'},
                        {class: 'form-horizontal'}) }}
                    <div class="form-group {{ errors.has('name') ? ' has-error' }}">
                        {{ form_label('name', 'Name') }}
                        <div class="input-group">
                            {{ form_text('name', file.name, {class: 'form-control'}) }}
                            <span class="input-group-btn">
                                {{ form_submit('Save', {class: 'btn btn-primary btn-block'}) }}
                            </span>
                        </div>
                        {% for error in errors.get('name') %}
                            <span class="help-block">{{ error }}</span>
                        {% endfor %}
                    </div>
                    <div class="form-group">
                        {{ form_label('mime_type', 'App signature') }}
                        {{ form_text('mime_type', file.mime_type, {class: 'form-control', disabled: ''}) }}
                    </div>
                    <div class="form-group">
                        {{ form_label('checksum', 'Checksum') }}
                        {{ form_text('checksum', file.checksum, {class: 'form-control', disabled: ''}) }}
                    </div>
                    <div class="form-group">
                    </div>
                    {{ form_close() }}
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    {% set texts = file.texts.sortBy('context') %}
{% for chunk in texts.chunk((texts.count() / 3)|round(0, 'ceil')) %}
    <div class="col-md-4">
{% for context, texts in chunk.groupBy('context') %}
<h3>{{ context }}</h3>
<table class="table">
    {% for text in texts %}
    <tr>
        <td><p>{{ text.text|preserveSpaces }}</p><p class="comment">{{ text.comment|preserveSpaces }}</p></td>
    </tr>
    {% endfor %}
</table>
{% endfor %}
    </div>
{% endfor %}
    </div>

{% endblock %}
