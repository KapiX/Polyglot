{% extends "layouts.master" %}

{% set canTranslate = can('translate-file', [file, lang]) %}
{% block title %}{{ file.project.name }} - {{ file.name }} - {{ lang.name }}{% endblock %}

{% block translationEditor %}
<div class="container-fluid">
    <div class="row">
        <div class="form-group">
            <textarea class="form-control">${translationCell.html()}</textarea>
            <span class="help-block"><small>Press Shift+Enter to enter a newline.</small></span>
        </div>
        <div class="form-group">
            <div class="btn-group btn-group-justified">
                <div class="btn-group">
                    <input class="btn btn-primary" id="save" type="button" value="Save">
                </div>
                <div class="btn-group">
                    <button class="btn btn-default" id="needswork">Needs work</button>
                </div>
                <div class="btn-group">
                    <input class="btn btn-danger" id="cancel" type="button" value="Cancel">
                </div>
            </div>
        </div>
        <div class="form-group">
            <ul class="list-group">
                <li class="list-group-item" id="history">Click to load past translations...</button>
            </ul>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
{% if canTranslate %}
<script type="text/javascript">
$(document).ready(function() {
    $('tr').click(function trclick() {
        var translationCell = $(this).find('td.translation');
        var _translationCell = this.querySelector('td.translation');
        var id = $(this).attr('id');
        var lang = $(this).parents('table').attr('id');
        var form = `{{ block('translationEditor') }}`;
        translationCell.addClass('translation-active');
        translationCell.html(form);
        $(this).unbind('click');
        var sendButton = $(translationCell).find('input#save');
        var cancelButton = $(translationCell).find('input#cancel');
        var textarea = $(translationCell).find('textarea');
        var tr = $(this);
        var _tr = this;

        var historyButton = _translationCell.querySelector('li#history');
        historyButton.onclick = function() {
            var list = _translationCell.querySelector('ul.list-group');
            list.children[0].innerHTML = 'Loading...';
            fetch('{{ url('/') }}/texts/' + id + '/lang/' + lang + '/history')
                .then(response => {
                    if(response.ok) {
                        return response.json();
                    } else {
                        throw new Error('Reponse has wrong status code: ' + response.status);
                    }
                })
                .then(data => {
                    var content = '';
                    if(data.length === 0) {
                        content += '<li class="list-group-item">';
                        content += '<em>No past translations.</em>';
                        content += '</li>';
                    } else {
                        for(var entry in data) {
                            content += '<li class="list-group-item">';
                            content += '<span class="badge">' + (new Date(data[entry].created_at)).toLocaleString() + '</span>';
                            content += data[entry].translation;
                            content += '</li>';
                        }
                    }
                    list.innerHTML = content;
                })
                .catch((error) => {
                    list.children[0].innerHTML = error;
                });
        }

        var needsWorkButton = _translationCell.querySelector('button#needswork');

        if(_tr.classList.contains('warning')) {
            needsWorkButton.classList.add('btn-warning');
        } else {
            needsWorkButton.classList.remove('btn-warning');
        }

        needsWorkButton.onclick = function() {
            _tr.classList.toggle('warning');
            needsWorkButton.classList.toggle('btn-warning');
        };

        textarea.prop('disabled', true);
        $.ajax({
            type: 'GET',
            dataType: 'json',
            url: '{{ url('/') }}/texts/' + id + '/lang/' + lang,
            success: function (data) {
                _tr.classList.remove('warning');
                needsWorkButton.classList.remove('btn-warning');
                textarea.val(data.translation);
                textarea.prop('disabled', false);
                textarea.focus();
                textarea.select();
                textarea.keypress(function(e) {
                    if(e.which == 13 && (e.ctrlKey == false && e.shiftKey == false)) {
                        sendButton.click();
                        return false;
                    }
                    return true;
                })
            }
        });
        sendButton.click(function() {
            textarea.prop('disabled', true);
            $.ajax({
                type: 'POST',
                data: {
                    '_token': '{{ csrf_token() }}',
                    'translation': textarea.val(),
                    'needswork': _tr.classList.contains('warning')
                },
                url: '{{ url('/') }}/texts/' + id + '/lang/' + lang,
                success: function (data) {
                    if(data.needswork)
                        tr.addClass('warning');
                    else
                        tr.removeClass('warning');
                    translationCell.text(data.translation);
                    translationCell.removeClass('translation-active');
                    tr.click(trclick);
                    tr.next().click();
                }
            });
        });
        cancelButton.click(function() {
            $.ajax({
                type: 'GET',
                dataType: 'json',
                url: '{{ url('/') }}/texts/' + id + '/lang/' + lang,
                success: function (data) {
                    if(data.needswork)
                        tr.addClass('warning');
                    else
                        tr.removeClass('warning');
                    translationCell.text(data.translation);
                    tr.click(trclick);
                    translationCell.removeClass('translation-active');
                }
            });
        });
    });
    $('#upload-form').submit(function(e) {
        if(confirm("This will overwrite all translations. Are you sure?")) {
            return true;
        }
        else {
            e.preventDefault();
            return false;
        }
    });
});
</script>
{% endif %}
{% endblock %}

{% block content %}
<ol class="breadcrumb">
    <li>{{ link_to_route('projects.index', 'Home') }}</li>
    <li>{{ html_image(file.project.icon, null, {class: 'breadcrumb-icon'}) }} {{ link_to_route('projects.show', file.project.name, {project: file.project}) }}</li>
    <li>{{ link_to_route('projects.show', file.name, {project: file.project}) }}</li>
    {% if not search %}
        <li class="active">{{ lang.name }}</li>
        {% if type == 'continue' %}
            <li class="active">Continue translation</li>
        {% endif %}
    {% else %}
        <li>{{ link_to_route('files.translate', lang.name, {file: file.id, lang: lang.id}) }}</li>
        <li class="active">Search: {{ search }}</li>
    {% endif %}
</ol>
<div class="container-fluid">
    {% if session('error') %}
        <div class="alert alert-danger" role="alert">{{ session('error') }}</div>
    {% endif %}
    {% if session('success') %}
        <div class="alert alert-success" role="alert">{{ session('success') }}</div>
    {% endif %}
    <div class="row">
        <div class="col-md-6 col-md-push-6">
            {% if canTranslate %}
            {{ form_open({url: route('files.import', {file: file.id, lang: lang.id}), method: POST, files: true, 'id': 'upload-form'}) }}
            <div class="form-group {{ errors.has('catkeys') ? ' has-error' }}">
                {{ form_label('catkeys', 'Upload ' ~ filename ~ '.' ~ file.getFileInstance().getExtension()) }}
                <div class="input-group">
                    {{ form_file('catkeys', {class: 'form-control'}) }}
                    <span class="input-group-btn">
                        {{ form_submit('Upload', {class: 'btn btn-primary'}) }}
                    </span>
                </div>
                {% for error in errors.get('catkeys') %}
                    <span class="help-block">{{ error }}</span>
                {% endfor %}
            </div>
            {{ form_close() }}
            {% endif %}
            {% if lang.style_guide_url or lang.terminology_url %}
                <p>Remember to
                    {% if lang.style_guide_url %} follow <a href="{{ lang.style_guide_url }}">style</a>{{ lang.terminology_url ? ' and ' }}{% endif %}
                    {% if lang.terminology_url %} use <a href="{{ lang.terminology_url }}">terminology</a>{% endif %} of your language.</p>
            {% endif %}
        </div>
        <div class="col-md-6 col-md-pull-6">
            <p>For strings that don't need translation, because they are the same as the English original, the "Needs work" button should be deactivated. Otherwise the percentage display on the overview page doesn't reach 100%.</p>
            {% if file.project.bugtracker_url %}
                <p>If you find typos in the English original or other issues, please report them at the <a href="{{ file.project.bugtracker_url }}">{{ file.project.name }} bug tracker</a>.</p>
            {% endif %}
        </div>
    </div>
</div>
{% if type == 'all' %}
{{ form_open({url: route('files.translate', {file: file.id, lang: lang.id}), method: 'GET'}) }}
<div class="input-group form-group">
    {% if search != '' %}
    <span class="input-group-btn">
        {{ link_to_route('files.translate', '&#x2715;', {file: file.id, lang: lang.id}, {class: 'btn btn-default'}) }}
    </span>
    {% endif %}
    {{ form_text('search', search, {class: 'form-control', placeholder: 'Text or translation...'}) }}
    <span class="input-group-btn">
        {{ form_submit('Search', {class: 'btn btn-default'}) }}
    </span>
</div>
{{ form_close() }}
{% endif %}
{% if translations.count() > 0 %}
    {% for context, translationsGrouped in translations.groupBy('context') %}
        <h3>{{ context }}</h3>
        <table class="table table-hover table-translations" id="{{ lang.id }}">
        {% for translation in translationsGrouped %}
            <tr id="{{ translation.text_id }}"{{ translation.needs_work ? ' class="warning"' }}>
                <td><p>{{ translation.text }}</p><p class="comment">{{ translation.comment }}</p></td>
                <td{{ canTranslate ? ' class="translation"' }}>{{ translation.translation }}</td>
            </tr>
        {% endfor %}
        </table>
    {% endfor %}
    {% if type == 'continue' and allTranslationsCount > perPage %}
        <p>Refresh the page to get more strings to translate.</p>
    {% else %}
        {{ translations.links() | raw }}
    {% endif %}
{% elseif search != '' and type == 'all' %}
<div class="alert alert-warning">No matches.</div>
{% else %}
<div class="alert alert-success"><strong>Well done!</strong> Translation complete!</div>
{% endif %}
{% endblock %}
