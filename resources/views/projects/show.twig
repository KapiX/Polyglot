{% extends "layouts.master" %}

{% block title %}{{ project.name }}{% endblock %}

{% block content %}
{% macro fill_table(chunk_count, tag = 'td') %}
    {% if chunk_count < 4 %}
        {% for i in 1..(4 - chunk_count) %}
            <{{ tag }}></{{ tag }}>
        {% endfor %}
    {% endif %}
{% endmacro %}
<ol class="breadcrumb">
    <li>{{ link_to_route('projects.index', 'Home') }}</li>
    <li>{{ html_image(project.icon, null, {class: 'breadcrumb-icon'}) }} {{ link_to_route('projects.show', project.name, {project: project}) }}</li>
    <li class="active">Translation modules</li>
</ol>
{% if session('error') %}
    <div class="alert alert-danger" role="alert">{{ session('error') }}</div>
{% endif %}
{% if session('success') %}
    <div class="alert alert-success" role="alert">{{ session('success') }}</div>
{% endif %}
{% set manyFiles = project.files.count() > 4 %}
{% if project.files.count() > 0 %}
{% set chunks = project.files.chunk(4) %}
<table class="table table-striped">
{% for chunk in chunks %}
<tbody>
<tr>
    <th colspan="2">
        {% if loop.first %}
        {% set label = 'Show ' ~ (display == 'all' ? 'only ' ~ (manyFiles ? 'preferred' : 'active') : 'all') ~ ' languages' %}
        {{ link_to_route('projects.show', label,
            { 'project': project.id, 'display': display == 'active' ? 'all' : '' }) }}
        {% endif %}
    </th>
    {% for file in chunk %}
    <th>
        <span title="{{ file.path }}.{{ file.getFileInstance().getExtension() }}" class="text-hover">
            {{ file.name }}
        </span>
        {% if auth_user().can('modify-file', file) %}
            {{ link_to_route('files.edit', 'Edit', file.id, {}) }}
        {% endif %}
        <br>
    </th>
    {% endfor %}
    {{ _self.fill_table(chunk.count(), 'th') }}
</tr>
{% for language in languages
    if language.iso_code != 'en' and
        (display == 'active' and (
            (modifiedKeys[language.id] > 0 and not manyFiles) or
            language.id in auth_user().preferred_languages))
        or (display == 'all') %}
<tr>
    <td class="iso-code"><b>{{ language.iso_code }}</b></td>
    <td>{{ language.name }}</td>
    {% for file in chunk %}
    <td>
        {% set lang_stat = status[file.id][language.id] %}
        <div class="progress progress-translation">
            <div class="progress-bar progress-bar-success"
                 style="width: {{ lang_stat['translated'] }}%">
                {% if lang_stat['translated'] > 24 %}
                    {{ lang_stat['translated'] }}%
                {% endif %}
            </div>
            <div class="progress-bar progress-bar-warning"
                 style="width: {{ lang_stat['needs_work'] }}%"></div>
        </div>
        <div class="btn-group">
            {% set canTranslate = can('translate-file', [file, language]) %}
            {% set continueLabel = canTranslate ? 'Continue' : 'View unfinished' %}
            {% set allLabel = canTranslate ? 'All blocks' : 'View all' %}
            {% set parameters = {file: file.id, lang: language.id} %}
            {% set unfinished = canTranslate and lang_stat['translated'] < 100 %}
            {% set buttonClass = unfinished ? 'btn-primary' : 'btn-default' %}
            {{ link_to_route('files.translate',
                unfinished ? continueLabel : allLabel,
                unfinished ? parameters|merge({type: 'continue'}) : parameters,
                {class: 'btn btn-xs ' ~ buttonClass}) }}
            <a href="#" class="btn {{ buttonClass }} btn-xs dropdown-toggle" data-toggle="dropdown">
                <span class="caret"></span>
                <span class="sr-only">Toggle dropdown</span>
            </a>
            <ul class="dropdown-menu">
                {% if unfinished %}
                    <li>{{ link_to_route('files.translate', allLabel, parameters, {}) }}</li>
                    <li>{{ link_to_route('files.pretranslate', 'Pretranslate', parameters, {}) }}</li>
                {% endif %}
                <li>{{ link_to_route('files.export', 'Export', parameters, {}) }}</li>
            </ul>
        </div>
    </td>
    {% endfor %}
    {{ _self.fill_table(chunk.count()) }}
</tr>
{% endfor %}
<tr>
    <td colspan="2">Export languages:
        {{ link_to_route('projects.export', 'all', {'project': project.id, 'status': 'all'}) }} |
        {{ link_to_route('projects.export', 'only completed', {'project': project.id, 'status': 'complete'}) }}
    </td>
    {% for file in chunk %}
    <td>
        {{ link_to_route('files.exportAll', 'Export file', file.id, {}) }}
    </td>
    {% endfor %}
    {{ _self.fill_table(chunk.count()) }}
</tr>
</tbody>
{% endfor %}
</table>
{% else %}
<p>This project has no translation modules yet.</p>
{% endif %}
{{ block('panels') }}
{% endblock %}

{% block panels %}
<div class="container-fluid">
    <div class="row">
        {% if auth_user().can('modify-project', project) %}
        <div class="panel panel-default">
            <div class="panel-heading">Add translation module</div>
            <div class="panel-body">
                {{ block('add_file_panel') }}
            </div>
        </div>
        {% endif %}
        <div class="panel panel-default">
            <div class="panel-heading">Administrators</div>
            <div class="panel-body">
                {% for admin in project.administrators %}
                {{ admin.name }}{% if loop.last == false %}, {% endif %}
                {% endfor %}
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">Contributors</div>
            <div class="panel-body">
                <table class="table table-striped">
                {% for language in contributors %}
                <tr>
                    <td>{{ language[0].language.name }} ({{ language[0].language.iso_code }})</td>
                    <td>
                        {% for contributor in language %}
                        <span class="{{ roleClass[contributor.role] }}">{{ contributor.user.name }}</span>{% if loop.last == false %}, {% endif %}
                        {% endfor %}
                    </td>
                    </tr>
                {% endfor %}
                </table>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block add_file_panel %}
<p class="message bg-info text-info">
Some apps generate several catkeys files, one for each "module" of the software, like for the main "Application", a "Preference" panel, a "Library" or "Tracker-addon" it comes with.<br />
Here you can add those different translation modules and their catkeys. Normal "single-catkeys" projects should be named simply "Application" for consistency.
</p>
{{ form_open({url: route('files.store', {project: project.id}), method: POST}) }}
<div class="input-group">
    {{ form_text('name', null, {'placeholder': 'Module name', 'class': 'form-control'}) }}
    <span class="input-group-btn">
        {{ form_submit('Add', {'class': 'btn btn-primary'}) }}
    </span>
</div>
{{ form_select('type', file_types, 1,
    {class: 'form-control', name: 'type[]'}) }}
{{ form_close() }}
{% endblock %}
